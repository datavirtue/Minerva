/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ConnectionsShippingDialog.java
 *
 * Created on Aug 17, 2009, 2:00:19 AM
 */
package com.datavirtue.nevitiumpro.Views;

import com.datavirtue.nevitiumpro.Legacy.RuntimeManagement.AppSettings;
import com.datavirtue.nevitiumpro.Util.LimitedDocument;
import com.datavirtue.nevitiumpro.Legacy.datavirtue.DV;
import com.datavirtue.nevitiumpro.entities.Connections;
import com.datavirtue.nevitiumpro.entities.ConnectionsAddress;
import com.datavirtue.nevitiumpro.hibernate.BeanTableModel;
import com.datavirtue.nevitiumpro.hibernate.TableUtil;
import java.awt.Image;
import java.awt.Toolkit;
import java.math.BigDecimal;
import java.util.*;
import javax.swing.JFormattedTextField;

/**
 *
 * @author Data Virtue
 */
public class ConnectionsAddressDialog extends javax.swing.JDialog {

    private Image winIcon;
    private AppSettings application;
    private ConnectionsAddress addressBean;
    private Connections connectionBean;
    private BeanTableModel btm;

    /**
     * Creates new form ConnectionsShippingDialog
     */
    public ConnectionsAddressDialog(java.awt.Frame parent, boolean modal, AppSettings g, Connections connection,
            boolean select, boolean showDefaultAddress) {
        super(parent, modal);

        Toolkit tools = Toolkit.getDefaultToolkit();
        winIcon = tools.getImage(getClass().getResource("/com/datavirtue/nevitiumpro/res/Orange.png"));
        initComponents();
        application = g;

        java.awt.Dimension dim = DV.computeCenter((java.awt.Window) this);
        this.setLocation(dim.width, dim.height);
        connectionBean = connection;
        selectButton.setVisible(select);
        this.select = select;

        String forConnection = "";
        if (connectionBean.getCompanyName().isEmpty()) {
            forConnection = connectionBean.getFirstName() + " " + connectionBean.getLastName();
        } else {
            forConnection = connectionBean.getFirstName() + " " + connectionBean.getLastName() + " of " + connectionBean.getCompanyName();
        }

        forField.setText(forConnection);

        attnField.setDocument(new LimitedDocument(35));
        addressField.setDocument(new LimitedDocument(40));
        address2Field.setDocument(new LimitedDocument(40));
        cityField.setDocument(new LimitedDocument(30));
        provenceField.setDocument(new LimitedDocument(20));
        pinCodeField.setDocument(new LimitedDocument(10));
        emailField.setDocument(new LimitedDocument(50));
        latitudeField = new JFormattedTextField(new BigDecimal(0));
        longitudeField = new JFormattedTextField(new BigDecimal(0));
        noteField.setDocument(new LimitedDocument(140));
        setFieldsEnabled(false);
        init(showDefaultAddress);
        

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        attnField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        address2Field = new javax.swing.JTextField();
        helpBox = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cityField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        provenceField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        pinCodeField = new javax.swing.JTextField();
        countryCombo = new javax.swing.JComboBox();
        defaultBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        emailField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        noteField = new javax.swing.JTextField();
        jToolBar2 = new javax.swing.JToolBar();
        clearButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        selectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        latitudeField = new javax.swing.JFormattedTextField();
        longitudeField = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        addressTable = new javax.swing.JTable();
        forField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Shipping Address");
        setAlwaysOnTop(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Attn");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Address");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Address 2");

        attnField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        attnField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                attnFieldMouseClicked(evt);
            }
        });

        addressField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        address2Field.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        helpBox.setEditable(false);
        helpBox.setText("Hit 'Clear' and click the 'Attn' field to start a new record");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("City/Town");

        cityField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("State/Prov/Region");

        provenceField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Post Code");

        pinCodeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        countryCombo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        countryCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "US", "CA", "GB", "ZA", "AU", "IN" }));

        defaultBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        defaultBox.setText("Default Address");
        defaultBox.setToolTipText("Make this the Default Shipping Address");
        defaultBox.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        defaultBox.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Latitude");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Longitude");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Tracking Email");

        emailField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Note");

        noteField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        clearButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        clearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/datavirtue/nevitiumpro/res/Aha-16/enabled/Corrupt text.png"))); // NOI18N
        clearButton.setText("Clear");
        clearButton.setToolTipText("Clears the fields to allow new record creation.");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(clearButton);

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/datavirtue/nevitiumpro/res/Aha-16/enabled/Floppy.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.setToolTipText("Saves changes");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(saveButton);

        selectButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        selectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/datavirtue/nevitiumpro/res/Aha-16/enabled/OK.png"))); // NOI18N
        selectButton.setText("Select");
        selectButton.setToolTipText("Select a shipping address");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(selectButton);

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/datavirtue/nevitiumpro/res/Aha-16/enabled/No.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("Cancel / Close window");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jToolBar2.add(cancelButton);

        latitudeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        longitudeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jToolBar2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(helpBox)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(emailField)
                            .add(noteField)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(pinCodeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 111, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(11, 11, 11)
                                        .add(countryCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, longitudeField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.LEADING, latitudeField)))
                                .add(0, 0, Short.MAX_VALUE))))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(jLabel7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(addressField)
                            .add(address2Field)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(attnField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 247, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(defaultBox, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, provenceField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                    .add(org.jdesktop.layout.GroupLayout.LEADING, cityField))
                                .add(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jToolBar2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(helpBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(attnField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(defaultBox))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(addressField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(address2Field, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(cityField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(provenceField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(pinCodeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(countryCombo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(latitudeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(longitudeField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(emailField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(noteField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addressTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addressTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        addressTable.setFocusable(false);
        addressTable.setSelectionBackground(new java.awt.Color(204, 255, 255));
        addressTable.setSelectionForeground(new java.awt.Color(0, 51, 51));
        addressTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        addressTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addressTableMouseClicked(evt);
            }
        });
        addressTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addressTableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(addressTable);

        forField.setEditable(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 673, Short.MAX_VALUE)
                    .add(forField))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(forField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void init(boolean showDefault) {

        refreshTable();
        setTableView();

        if (showDefault) {
            ConnectionsAddress tempAddress;
            btm = (BeanTableModel) addressTable.getModel();
            for (int r = 0; r < addressTable.getRowCount(); r++) {
                tempAddress = (ConnectionsAddress) btm.getBeanAt(r);
                if (tempAddress.getDefaultAddress() == true) {
                    addressTable.changeSelection(r, 0, false, false);
                    populate();                    
                }
            }
        }

    }

    private void refreshTable() {
        application.getJPA().getSession().update(connectionBean);
        btm = new BeanTableModel(ConnectionsAddress.class, connectionBean.getConnectionsAddressList());
        addressTable.setModel(btm);
        setTableView();
    }

    public void setTableView() {
        //Main Table
        ArrayList<String> list = new ArrayList<String>();
        list.add("Attn");
        list.add("Address");
        list.add("City");
        list.add("Default Address");
        ArrayList<Integer> widths = new ArrayList<Integer>();
        widths.add(25);
        widths.add(30);
        widths.add(30);
        widths.add(14);
        try {
            TableUtil.removeAllCols(addressTable, list);
            TableUtil.orderColumns(addressTable, list);
            TableUtil.sizeColumns(addressTable, widths);
        } catch (Exception ex) {
            ExceptionErrorDialog errDialog = new ExceptionErrorDialog(ex);
            errDialog.pack();
            errDialog.setVisible(true);
        }

    }

    private void populate() {

        if (addressTable.getSelectedRow() < 0) {
            return;
        }
        btm = (BeanTableModel) addressTable.getModel();
        addressBean = (ConnectionsAddress) btm.getBeanAt(addressTable.getSelectedRow());

        attnField.setText(addressBean.getAttn());
        defaultBox.setSelected(addressBean.getDefaultAddress());
        addressField.setText(addressBean.getAddress());
        address2Field.setText(addressBean.getAddress2());
        cityField.setText(addressBean.getCity());
        provenceField.setText(addressBean.getProvence());
        pinCodeField.setText(addressBean.getPostCode());
        countryCombo.setSelectedItem(addressBean.getCountryCode());
        latitudeField.setText(addressBean.getLatitude().toString());
        longitudeField.setText(addressBean.getLongitude().toString());
        emailField.setText(addressBean.getTrackingEmail());
        noteField.setText(addressBean.getNote());
        setFieldsEnabled(true);
        attnField.requestFocus();
    }

    private void clearFields() {

        defaultBox.setSelected(false);
        attnField.setText("");
        addressField.setText("");
        address2Field.setText("");
        cityField.setText("");
        provenceField.setText("");
        pinCodeField.setText("");
        countryCombo.setSelectedItem("US");  //set to default country
        latitudeField.setValue(new BigDecimal(0));
        longitudeField.setValue(new BigDecimal(0));
        emailField.setText("");
        noteField.setText("");
        helpBox.setText("Click the 'Company' field to start a new record.");
    }

    private void setFieldsEnabled(boolean b) {
        attnField.setEnabled(b);
        defaultBox.setEnabled(b);
        addressField.setEnabled(b);
        address2Field.setEnabled(b);
        cityField.setEnabled(b);
        provenceField.setEnabled(b);
        pinCodeField.setEnabled(b);
        countryCombo.setEnabled(b);
        latitudeField.setEnabled(b);
        longitudeField.setEnabled(b);
        emailField.setEnabled(b);
        noteField.setEnabled(b);

    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed

        if (select) {
            addressBean = null;
            this.setVisible(false);
        } else {
            this.dispose();
        }


    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        saveAction();

    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clearFields();
        setFieldsEnabled(false);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void addressTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addressTableMouseClicked
        int mouseButton = evt.getButton();
        if (mouseButton == evt.BUTTON2 || mouseButton == evt.BUTTON3) {
            return;
        }
        if (select && evt.getClickCount() == 2) {
            this.setVisible(false);
        }

        populate();
    }//GEN-LAST:event_addressTableMouseClicked

    private void addressTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressTableKeyPressed
        populate();
    }//GEN-LAST:event_addressTableKeyPressed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        selectAction();
    }//GEN-LAST:event_selectButtonActionPerformed

    private void attnFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attnFieldMouseClicked
        addressBean = new ConnectionsAddress();
        this.setFieldsEnabled(true);
    }//GEN-LAST:event_attnFieldMouseClicked

    private void selectAction() {
        if (!select) {
            return;
        }
        this.setVisible(false);
    }

    public ConnectionsAddress getAddress() {

        return addressBean;
    }

    private void saveAction() {

        //unset any addresses currently selected as default if the current one is marked default
        if (defaultBox.isSelected()) {
            ConnectionsAddress tempAddress;
            btm = (BeanTableModel) addressTable.getModel();
            for (int r = 0; r < addressTable.getRowCount(); r++) {
                tempAddress = (ConnectionsAddress) btm.getBeanAt(r);
                if (tempAddress.getDefaultAddress() == true) {
                    tempAddress.setDefaultAddress(false);
                    connectionBean.getConnectionsAddressList().add(tempAddress);
                }
            }
        }

        //set the current address being saved as default if none are currently selected default
        if (!defaultBox.isSelected()) {
            boolean defaultFound = false;
            ConnectionsAddress tempAddress;
            btm = (BeanTableModel) addressTable.getModel();
            for (int r = 0; r < addressTable.getRowCount(); r++) {
                tempAddress = (ConnectionsAddress) btm.getBeanAt(r);
                if (tempAddress.getDefaultAddress() == true) {
                    defaultFound = true;
                }
            }
            if (!defaultFound) {
                defaultBox.setSelected(true);
            }
        }

        addressBean.setDefaultAddress(defaultBox.isSelected());
        addressBean.setAttn(attnField.getText());
        addressBean.setAddress(addressField.getText());
        addressBean.setCity(cityField.getText());
        addressBean.setProvence(provenceField.getText());
        addressBean.setPostCode(pinCodeField.getText());
        addressBean.setCountryCode((String) countryCombo.getSelectedItem());
        addressBean.setLatitude((BigDecimal) latitudeField.getValue());
        addressBean.setLongitude((BigDecimal) longitudeField.getValue());
        addressBean.setTrackingEmail(emailField.getText());
        addressBean.setNote(noteField.getText());

        if (addressBean.getId() == null) {
            addressBean.setConnections(connectionBean);
        }

        application.getJPA().transactionSave(addressBean, application.getTimeout());

        refreshTable();
        clearFields();
        setFieldsEnabled(false);
    }
    private boolean select = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address2Field;
    private javax.swing.JTextField addressField;
    private javax.swing.JTable addressTable;
    private javax.swing.JTextField attnField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cityField;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox countryCombo;
    private javax.swing.JCheckBox defaultBox;
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField forField;
    private javax.swing.JTextField helpBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JFormattedTextField latitudeField;
    private javax.swing.JFormattedTextField longitudeField;
    private javax.swing.JTextField noteField;
    private javax.swing.JTextField pinCodeField;
    private javax.swing.JTextField provenceField;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables
}
