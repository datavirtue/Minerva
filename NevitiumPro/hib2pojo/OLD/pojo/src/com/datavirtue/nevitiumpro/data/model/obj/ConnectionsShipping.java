package com.datavirtue.nevitiumpro.data.model.obj;

import com.datavirtue.nevitiumpro.data.model.obj.IConnectionsShipping;
import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import java.io.Serializable;
import java.util.Collections;
import java.util.Map;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: connections_shipping.
 * @author autogenerated
 */

@Entity
@Table(name = "connections_shipping", catalog = "NevitiumPro")
public class ConnectionsShipping implements Cloneable, Serializable, IPojoGenEntity, IConnectionsShipping {

	/** Serial Version UID. */
	private static final long serialVersionUID = -559029508L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Integer> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Integer>());
	
	/** hashCode temporary storage. */
	private volatile Integer hashCode;
	

	/** Field mapping. */
	private String address;
	/** Field mapping. */
	private String address2;
	/** Field mapping. */
	private String attn;
	/** Field mapping. */
	private String city;
	/** Field mapping. */
	private Connections connectionsConnections;
	/** Field mapping. */
	private String countryCode;
	/** Field mapping. */
	private String custom1;
	/** Field mapping. */
	private String custom2;
	/** Field mapping. */
	private Boolean defaultShippingAddress;
	/** Field mapping. */
	private String email;
	/** Field mapping. */
	private String fax;
	/** Field mapping. */
	private Integer id = 0; // init for hibernate bug workaround
	/** Field mapping. */
	private java.math.BigDecimal latitude;
	/** Field mapping. */
	private String locationName;
	/** Field mapping. */
	private java.math.BigDecimal longitude;
	/** Field mapping. */
	private String mobile1;
	/** Field mapping. */
	private String mobile2;
	/** Field mapping. */
	private String note;
	/** Field mapping. */
	private String postCode;
	/** Field mapping. */
	private String state;
	/** Field mapping. */
	private String website;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public ConnectionsShipping() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public ConnectionsShipping(Integer id) {
		this.id = id;
	}
	
	/** Constructor taking a given ID.
	 * @param connectionsConnections Connections object;
	 * @param id Integer object;
	 */
	public ConnectionsShipping(Connections connectionsConnections, Integer id) {

		this.connectionsConnections = connectionsConnections;
		this.id = id;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return ConnectionsShipping.class;
	}
 

    /**
     * Return the value associated with the column: address.
	 * @return A String object (this.address)
	 */
	@Basic( optional = true )
	@Column( length = 40  )
	public String getAddress() {
		return this.address;
		
	}
	

  
    /**  
     * Set the value related to the column: address.
	 * @param address the address value you wish to set
	 */
	public void setAddress(final String address) {
		this.address = address;
	}

    /**
     * Return the value associated with the column: address2.
	 * @return A String object (this.address2)
	 */
	@Basic( optional = true )
	@Column( name = "address_2", length = 40  )
	public String getAddress2() {
		return this.address2;
		
	}
	

  
    /**  
     * Set the value related to the column: address2.
	 * @param address2 the address2 value you wish to set
	 */
	public void setAddress2(final String address2) {
		this.address2 = address2;
	}

    /**
     * Return the value associated with the column: attn.
	 * @return A String object (this.attn)
	 */
	@Basic( optional = true )
	@Column( length = 40  )
	public String getAttn() {
		return this.attn;
		
	}
	

  
    /**  
     * Set the value related to the column: attn.
	 * @param attn the attn value you wish to set
	 */
	public void setAttn(final String attn) {
		this.attn = attn;
	}

    /**
     * Return the value associated with the column: city.
	 * @return A String object (this.city)
	 */
	@Basic( optional = true )
	@Column( length = 30  )
	public String getCity() {
		return this.city;
		
	}
	

  
    /**  
     * Set the value related to the column: city.
	 * @param city the city value you wish to set
	 */
	public void setCity(final String city) {
		this.city = city;
	}

    /**
     * Return the value associated with the column: connectionsConnections.
	 * @return A Connections object (this.connectionsConnections)
	 */
	@ManyToOne( cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.LAZY )
	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@JoinColumn(name = "CONNECTIONS_CONNECTIONS_ID", nullable = false )
	public Connections getConnectionsConnections() {
		return this.connectionsConnections;
		
	}
	

  
    /**  
     * Set the value related to the column: connectionsConnections.
	 * @param connectionsConnections the connectionsConnections value you wish to set
	 */
	public void setConnectionsConnections(final Connections connectionsConnections) {
		this.connectionsConnections = connectionsConnections;
	}

    /**
     * Return the value associated with the column: countryCode.
	 * @return A String object (this.countryCode)
	 */
	@Basic( optional = true )
	@Column( name = "country_code", length = 2  )
	public String getCountryCode() {
		return this.countryCode;
		
	}
	

  
    /**  
     * Set the value related to the column: countryCode.
	 * @param countryCode the countryCode value you wish to set
	 */
	public void setCountryCode(final String countryCode) {
		this.countryCode = countryCode;
	}

    /**
     * Return the value associated with the column: custom1.
	 * @return A String object (this.custom1)
	 */
	@Basic( optional = true )
	@Column( name = "custom_1", length = 50  )
	public String getCustom1() {
		return this.custom1;
		
	}
	

  
    /**  
     * Set the value related to the column: custom1.
	 * @param custom1 the custom1 value you wish to set
	 */
	public void setCustom1(final String custom1) {
		this.custom1 = custom1;
	}

    /**
     * Return the value associated with the column: custom2.
	 * @return A String object (this.custom2)
	 */
	@Basic( optional = true )
	@Column( name = "custom_2", length = 50  )
	public String getCustom2() {
		return this.custom2;
		
	}
	

  
    /**  
     * Set the value related to the column: custom2.
	 * @param custom2 the custom2 value you wish to set
	 */
	public void setCustom2(final String custom2) {
		this.custom2 = custom2;
	}

    /**
     * Return the value associated with the column: defaultShippingAddress.
	 * @return A Boolean object (this.defaultShippingAddress)
	 */
	@Basic( optional = true )
	@Column( name = "default_shipping_address"  )
	public Boolean isDefaultShippingAddress() {
		return this.defaultShippingAddress;
		
	}
	

  
    /**  
     * Set the value related to the column: defaultShippingAddress.
	 * @param defaultShippingAddress the defaultShippingAddress value you wish to set
	 */
	public void setDefaultShippingAddress(final Boolean defaultShippingAddress) {
		this.defaultShippingAddress = defaultShippingAddress;
	}

    /**
     * Return the value associated with the column: email.
	 * @return A String object (this.email)
	 */
	@Basic( optional = true )
	@Column( length = 50  )
	public String getEmail() {
		return this.email;
		
	}
	

  
    /**  
     * Set the value related to the column: email.
	 * @param email the email value you wish to set
	 */
	public void setEmail(final String email) {
		this.email = email;
	}

    /**
     * Return the value associated with the column: fax.
	 * @return A String object (this.fax)
	 */
	@Basic( optional = true )
	@Column( length = 20  )
	public String getFax() {
		return this.fax;
		
	}
	

  
    /**  
     * Set the value related to the column: fax.
	 * @param fax the fax value you wish to set
	 */
	public void setFax(final String fax) {
		this.fax = fax;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Integer object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Basic( optional = false )
	@Column( name = "connections_shipping_id", nullable = false  )
	public Integer getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Integer id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: latitude.
	 * @return A java.math.BigDecimal object (this.latitude)
	 */
	public java.math.BigDecimal getLatitude() {
		return this.latitude;
		
	}
	

  
    /**  
     * Set the value related to the column: latitude.
	 * @param latitude the latitude value you wish to set
	 */
	public void setLatitude(final java.math.BigDecimal latitude) {
		this.latitude = latitude;
	}

    /**
     * Return the value associated with the column: locationName.
	 * @return A String object (this.locationName)
	 */
	@Basic( optional = true )
	@Column( name = "location_name", length = 40  )
	public String getLocationName() {
		return this.locationName;
		
	}
	

  
    /**  
     * Set the value related to the column: locationName.
	 * @param locationName the locationName value you wish to set
	 */
	public void setLocationName(final String locationName) {
		this.locationName = locationName;
	}

    /**
     * Return the value associated with the column: longitude.
	 * @return A java.math.BigDecimal object (this.longitude)
	 */
	public java.math.BigDecimal getLongitude() {
		return this.longitude;
		
	}
	

  
    /**  
     * Set the value related to the column: longitude.
	 * @param longitude the longitude value you wish to set
	 */
	public void setLongitude(final java.math.BigDecimal longitude) {
		this.longitude = longitude;
	}

    /**
     * Return the value associated with the column: mobile1.
	 * @return A String object (this.mobile1)
	 */
	@Basic( optional = true )
	@Column( name = "mobile_1", length = 20  )
	public String getMobile1() {
		return this.mobile1;
		
	}
	

  
    /**  
     * Set the value related to the column: mobile1.
	 * @param mobile1 the mobile1 value you wish to set
	 */
	public void setMobile1(final String mobile1) {
		this.mobile1 = mobile1;
	}

    /**
     * Return the value associated with the column: mobile2.
	 * @return A String object (this.mobile2)
	 */
	@Basic( optional = true )
	@Column( name = "mobile_2", length = 20  )
	public String getMobile2() {
		return this.mobile2;
		
	}
	

  
    /**  
     * Set the value related to the column: mobile2.
	 * @param mobile2 the mobile2 value you wish to set
	 */
	public void setMobile2(final String mobile2) {
		this.mobile2 = mobile2;
	}

    /**
     * Return the value associated with the column: note.
	 * @return A String object (this.note)
	 */
	@Basic( optional = true )
	@Column( length = 16000  )
	public String getNote() {
		return this.note;
		
	}
	

  
    /**  
     * Set the value related to the column: note.
	 * @param note the note value you wish to set
	 */
	public void setNote(final String note) {
		this.note = note;
	}

    /**
     * Return the value associated with the column: postCode.
	 * @return A String object (this.postCode)
	 */
	@Basic( optional = true )
	@Column( name = "post_code", length = 10  )
	public String getPostCode() {
		return this.postCode;
		
	}
	

  
    /**  
     * Set the value related to the column: postCode.
	 * @param postCode the postCode value you wish to set
	 */
	public void setPostCode(final String postCode) {
		this.postCode = postCode;
	}

    /**
     * Return the value associated with the column: state.
	 * @return A String object (this.state)
	 */
	@Basic( optional = true )
	@Column( length = 20  )
	public String getState() {
		return this.state;
		
	}
	

  
    /**  
     * Set the value related to the column: state.
	 * @param state the state value you wish to set
	 */
	public void setState(final String state) {
		this.state = state;
	}

    /**
     * Return the value associated with the column: website.
	 * @return A String object (this.website)
	 */
	@Basic( optional = true )
	@Column( length = 100  )
	public String getWebsite() {
		return this.website;
		
	}
	

  
    /**  
     * Set the value related to the column: website.
	 * @param website the website value you wish to set
	 */
	public void setWebsite(final String website) {
		this.website = website;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public ConnectionsShipping clone() throws CloneNotSupportedException {
		
        final ConnectionsShipping copy = (ConnectionsShipping)super.clone();

		copy.setAddress(this.getAddress());
		copy.setAddress2(this.getAddress2());
		copy.setAttn(this.getAttn());
		copy.setCity(this.getCity());
		copy.setConnectionsConnections(this.getConnectionsConnections());
		copy.setCountryCode(this.getCountryCode());
		copy.setCustom1(this.getCustom1());
		copy.setCustom2(this.getCustom2());
		copy.setDefaultShippingAddress(this.isDefaultShippingAddress());
		copy.setEmail(this.getEmail());
		copy.setFax(this.getFax());
		copy.setId(this.getId());
		copy.setLatitude(this.getLatitude());
		copy.setLocationName(this.getLocationName());
		copy.setLongitude(this.getLongitude());
		copy.setMobile1(this.getMobile1());
		copy.setMobile2(this.getMobile2());
		copy.setNote(this.getNote());
		copy.setPostCode(this.getPostCode());
		copy.setState(this.getState());
		copy.setWebsite(this.getWebsite());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("address: " + this.getAddress() + ", ");
		sb.append("address2: " + this.getAddress2() + ", ");
		sb.append("attn: " + this.getAttn() + ", ");
		sb.append("city: " + this.getCity() + ", ");
		sb.append("countryCode: " + this.getCountryCode() + ", ");
		sb.append("custom1: " + this.getCustom1() + ", ");
		sb.append("custom2: " + this.getCustom2() + ", ");
		sb.append("defaultShippingAddress: " + this.isDefaultShippingAddress() + ", ");
		sb.append("email: " + this.getEmail() + ", ");
		sb.append("fax: " + this.getFax() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("latitude: " + this.getLatitude() + ", ");
		sb.append("locationName: " + this.getLocationName() + ", ");
		sb.append("longitude: " + this.getLongitude() + ", ");
		sb.append("mobile1: " + this.getMobile1() + ", ");
		sb.append("mobile2: " + this.getMobile2() + ", ");
		sb.append("note: " + this.getNote() + ", ");
		sb.append("postCode: " + this.getPostCode() + ", ");
		sb.append("state: " + this.getState() + ", ");
		sb.append("website: " + this.getWebsite());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final ConnectionsShipping that; 
		try {
			that = (ConnectionsShipping) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAddress() == null) && (that.getAddress() == null)) || (getAddress() != null && getAddress().equals(that.getAddress())));
		result = result && (((getAddress2() == null) && (that.getAddress2() == null)) || (getAddress2() != null && getAddress2().equals(that.getAddress2())));
		result = result && (((getAttn() == null) && (that.getAttn() == null)) || (getAttn() != null && getAttn().equals(that.getAttn())));
		result = result && (((getCity() == null) && (that.getCity() == null)) || (getCity() != null && getCity().equals(that.getCity())));
		result = result && (((getConnectionsConnections() == null) && (that.getConnectionsConnections() == null)) || (getConnectionsConnections() != null && getConnectionsConnections().getId().equals(that.getConnectionsConnections().getId())));	
		result = result && (((getCountryCode() == null) && (that.getCountryCode() == null)) || (getCountryCode() != null && getCountryCode().equals(that.getCountryCode())));
		result = result && (((getCustom1() == null) && (that.getCustom1() == null)) || (getCustom1() != null && getCustom1().equals(that.getCustom1())));
		result = result && (((getCustom2() == null) && (that.getCustom2() == null)) || (getCustom2() != null && getCustom2().equals(that.getCustom2())));
		result = result && (((isDefaultShippingAddress() == null) && (that.isDefaultShippingAddress() == null)) || (isDefaultShippingAddress() != null && isDefaultShippingAddress().equals(that.isDefaultShippingAddress())));
		result = result && (((getEmail() == null) && (that.getEmail() == null)) || (getEmail() != null && getEmail().equals(that.getEmail())));
		result = result && (((getFax() == null) && (that.getFax() == null)) || (getFax() != null && getFax().equals(that.getFax())));
		result = result && (((getLatitude() == null) && (that.getLatitude() == null)) || (getLatitude() != null && getLatitude().equals(that.getLatitude())));
		result = result && (((getLocationName() == null) && (that.getLocationName() == null)) || (getLocationName() != null && getLocationName().equals(that.getLocationName())));
		result = result && (((getLongitude() == null) && (that.getLongitude() == null)) || (getLongitude() != null && getLongitude().equals(that.getLongitude())));
		result = result && (((getMobile1() == null) && (that.getMobile1() == null)) || (getMobile1() != null && getMobile1().equals(that.getMobile1())));
		result = result && (((getMobile2() == null) && (that.getMobile2() == null)) || (getMobile2() != null && getMobile2().equals(that.getMobile2())));
		result = result && (((getNote() == null) && (that.getNote() == null)) || (getNote() != null && getNote().equals(that.getNote())));
		result = result && (((getPostCode() == null) && (that.getPostCode() == null)) || (getPostCode() != null && getPostCode().equals(that.getPostCode())));
		result = result && (((getState() == null) && (that.getState() == null)) || (getState() != null && getState().equals(that.getState())));
		result = result && (((getWebsite() == null) && (that.getWebsite() == null)) || (getWebsite() != null && getWebsite().equals(that.getWebsite())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Integer newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0) {
							newHashCode = getId();
						} else {

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
	return this.hashCode;
	}
	

	
}
