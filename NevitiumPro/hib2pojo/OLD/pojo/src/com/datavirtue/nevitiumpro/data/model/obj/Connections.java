package com.datavirtue.nevitiumpro.data.model.obj;

import com.datavirtue.nevitiumpro.data.model.obj.ConnectionsDocuments;
import com.datavirtue.nevitiumpro.data.model.obj.ConnectionsShipping;
import com.datavirtue.nevitiumpro.data.model.obj.IConnections;
import com.datavirtue.nevitiumpro.data.model.obj.InventoryHasConnections;
import com.datavirtue.nevitiumpro.data.model.obj.Invoices;
import com.datavirtue.nevitiumpro.data.model.obj.ProjectsHasConnections;
import com.datavirtue.nevitiumpro.data.model.obj.Quotes;
import com.felees.hbnpojogen.persistence.IPojoGenEntity;
import java.io.Serializable;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.WeakHashMap;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.proxy.HibernateProxy;


/** 
 * Object mapping for hibernate-handled table: connections.
 * @author autogenerated
 */

@Entity
@Table(name = "connections", catalog = "NevitiumPro")
public class Connections implements Cloneable, Serializable, IPojoGenEntity, IConnections {

	/** Serial Version UID. */
	private static final long serialVersionUID = -559029510L;

	/** Use a WeakHashMap so entries will be garbage collected once all entities 
		referring to a saved hash are garbage collected themselves. */
	private static final Map<Serializable, Integer> SAVED_HASHES =
		Collections.synchronizedMap(new WeakHashMap<Serializable, Integer>());
	
	/** hashCode temporary storage. */
	private volatile Integer hashCode;
	

	/** Field mapping. */
	private String address;
	/** Field mapping. */
	private String address2;
	/** Field mapping. */
	private String city;
	/** Field mapping. */
	private String companyName;
	/** Field mapping. */
	private Set<ConnectionsDocuments> connectionsDocumentss = new HashSet<ConnectionsDocuments>();

	/** Field mapping. */
	private Set<ConnectionsShipping> connectionsShippings = new HashSet<ConnectionsShipping>();

	/** Field mapping. */
	private String contact;
	/** Field mapping. */
	private String countryCode;
	/** Field mapping. */
	private Boolean customer;
	/** Field mapping. */
	private String custom1;
	/** Field mapping. */
	private String custom2;
	/** Field mapping. */
	private String email;
	/** Field mapping. */
	private String fax;
	/** Field mapping. */
	private String firstName;
	/** Field mapping. */
	private Integer id = 0; // init for hibernate bug workaround
	/** Field mapping. */
	private Set<InventoryHasConnections> inventoryHasConnectionss = new HashSet<InventoryHasConnections>();

	/** Field mapping. */
	private Set<Invoices> invoiceses = new HashSet<Invoices>();

	/** Field mapping. */
	private String lastName;
	/** Field mapping. */
	private java.math.BigDecimal latitude;
	/** Field mapping. */
	private java.math.BigDecimal longitude;
	/** Field mapping. */
	private String mobile1;
	/** Field mapping. */
	private String mobile2;
	/** Field mapping. */
	private String note;
	/** Field mapping. */
	private Byte[] picture;
	/** Field mapping. */
	private String postCode;
	/** Field mapping. */
	private Set<ProjectsHasConnections> projectsHasConnectionss = new HashSet<ProjectsHasConnections>();

	/** Field mapping. */
	private Set<Quotes> quoteses = new HashSet<Quotes>();

	/** Field mapping. */
	private String state;
	/** Field mapping. */
	private Boolean supplier;
	/** Field mapping. */
	private Boolean tax1;
	/** Field mapping. */
	private Boolean tax2;
	/** Field mapping. */
	private String website;
	/**
	 * Default constructor, mainly for hibernate use.
	 */
	public Connections() {
		// Default constructor
	} 

	/** Constructor taking a given ID.
	 * @param id to set
	 */
	public Connections(Integer id) {
		this.id = id;
	}
	
 


 
	/** Return the type of this class. Useful for when dealing with proxies.
	* @return Defining class.
	*/
	@Transient
	public Class<?> getClassType() {
		return Connections.class;
	}
 

    /**
     * Return the value associated with the column: address.
	 * @return A String object (this.address)
	 */
	@Basic( optional = true )
	@Column( length = 40  )
	public String getAddress() {
		return this.address;
		
	}
	

  
    /**  
     * Set the value related to the column: address.
	 * @param address the address value you wish to set
	 */
	public void setAddress(final String address) {
		this.address = address;
	}

    /**
     * Return the value associated with the column: address2.
	 * @return A String object (this.address2)
	 */
	@Basic( optional = true )
	@Column( name = "address_2", length = 40  )
	public String getAddress2() {
		return this.address2;
		
	}
	

  
    /**  
     * Set the value related to the column: address2.
	 * @param address2 the address2 value you wish to set
	 */
	public void setAddress2(final String address2) {
		this.address2 = address2;
	}

    /**
     * Return the value associated with the column: city.
	 * @return A String object (this.city)
	 */
	@Basic( optional = true )
	@Column( length = 30  )
	public String getCity() {
		return this.city;
		
	}
	

  
    /**  
     * Set the value related to the column: city.
	 * @param city the city value you wish to set
	 */
	public void setCity(final String city) {
		this.city = city;
	}

    /**
     * Return the value associated with the column: companyName.
	 * @return A String object (this.companyName)
	 */
	@Basic( optional = true )
	@Column( name = "company_name", length = 40  )
	public String getCompanyName() {
		return this.companyName;
		
	}
	

  
    /**  
     * Set the value related to the column: companyName.
	 * @param companyName the companyName value you wish to set
	 */
	public void setCompanyName(final String companyName) {
		this.companyName = companyName;
	}

    /**
     * Return the value associated with the column: connectionsDocuments.
	 * @return A Set&lt;ConnectionsDocuments&gt; object (this.connectionsDocuments)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "connectionsConnections"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "connections_id", nullable = false  )
	public Set<ConnectionsDocuments> getConnectionsDocumentss() {
		return this.connectionsDocumentss;
		
	}
	
	/**
	 * Adds a bi-directional link of type ConnectionsDocuments to the connectionsDocumentss set.
	 * @param connectionsDocuments item to add
	 */
	public void addConnectionsDocuments(ConnectionsDocuments connectionsDocuments) {
		connectionsDocuments.setConnectionsConnections(this);
		this.connectionsDocumentss.add(connectionsDocuments);
	}

  
    /**  
     * Set the value related to the column: connectionsDocuments.
	 * @param connectionsDocuments the connectionsDocuments value you wish to set
	 */
	public void setConnectionsDocumentss(final Set<ConnectionsDocuments> connectionsDocuments) {
		this.connectionsDocumentss = connectionsDocuments;
	}

    /**
     * Return the value associated with the column: connectionsShipping.
	 * @return A Set&lt;ConnectionsShipping&gt; object (this.connectionsShipping)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "connectionsConnections"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "connections_id", nullable = false  )
	public Set<ConnectionsShipping> getConnectionsShippings() {
		return this.connectionsShippings;
		
	}
	
	/**
	 * Adds a bi-directional link of type ConnectionsShipping to the connectionsShippings set.
	 * @param connectionsShipping item to add
	 */
	public void addConnectionsShipping(ConnectionsShipping connectionsShipping) {
		connectionsShipping.setConnectionsConnections(this);
		this.connectionsShippings.add(connectionsShipping);
	}

  
    /**  
     * Set the value related to the column: connectionsShipping.
	 * @param connectionsShipping the connectionsShipping value you wish to set
	 */
	public void setConnectionsShippings(final Set<ConnectionsShipping> connectionsShipping) {
		this.connectionsShippings = connectionsShipping;
	}

    /**
     * Return the value associated with the column: contact.
	 * @return A String object (this.contact)
	 */
	@Basic( optional = true )
	@Column( length = 30  )
	public String getContact() {
		return this.contact;
		
	}
	

  
    /**  
     * Set the value related to the column: contact.
	 * @param contact the contact value you wish to set
	 */
	public void setContact(final String contact) {
		this.contact = contact;
	}

    /**
     * Return the value associated with the column: countryCode.
	 * @return A String object (this.countryCode)
	 */
	@Basic( optional = true )
	@Column( name = "country_code", length = 2  )
	public String getCountryCode() {
		return this.countryCode;
		
	}
	

  
    /**  
     * Set the value related to the column: countryCode.
	 * @param countryCode the countryCode value you wish to set
	 */
	public void setCountryCode(final String countryCode) {
		this.countryCode = countryCode;
	}

    /**
     * Return the value associated with the column: customer.
	 * @return A Boolean object (this.customer)
	 */
	public Boolean isCustomer() {
		return this.customer;
		
	}
	

  
    /**  
     * Set the value related to the column: customer.
	 * @param customer the customer value you wish to set
	 */
	public void setCustomer(final Boolean customer) {
		this.customer = customer;
	}

    /**
     * Return the value associated with the column: custom1.
	 * @return A String object (this.custom1)
	 */
	@Basic( optional = true )
	@Column( name = "custom_1", length = 50  )
	public String getCustom1() {
		return this.custom1;
		
	}
	

  
    /**  
     * Set the value related to the column: custom1.
	 * @param custom1 the custom1 value you wish to set
	 */
	public void setCustom1(final String custom1) {
		this.custom1 = custom1;
	}

    /**
     * Return the value associated with the column: custom2.
	 * @return A String object (this.custom2)
	 */
	@Basic( optional = true )
	@Column( name = "custom_2", length = 50  )
	public String getCustom2() {
		return this.custom2;
		
	}
	

  
    /**  
     * Set the value related to the column: custom2.
	 * @param custom2 the custom2 value you wish to set
	 */
	public void setCustom2(final String custom2) {
		this.custom2 = custom2;
	}

    /**
     * Return the value associated with the column: email.
	 * @return A String object (this.email)
	 */
	@Basic( optional = true )
	@Column( length = 50  )
	public String getEmail() {
		return this.email;
		
	}
	

  
    /**  
     * Set the value related to the column: email.
	 * @param email the email value you wish to set
	 */
	public void setEmail(final String email) {
		this.email = email;
	}

    /**
     * Return the value associated with the column: fax.
	 * @return A String object (this.fax)
	 */
	@Basic( optional = true )
	@Column( length = 20  )
	public String getFax() {
		return this.fax;
		
	}
	

  
    /**  
     * Set the value related to the column: fax.
	 * @param fax the fax value you wish to set
	 */
	public void setFax(final String fax) {
		this.fax = fax;
	}

    /**
     * Return the value associated with the column: firstName.
	 * @return A String object (this.firstName)
	 */
	@Basic( optional = true )
	@Column( name = "first_name", length = 20  )
	public String getFirstName() {
		return this.firstName;
		
	}
	

  
    /**  
     * Set the value related to the column: firstName.
	 * @param firstName the firstName value you wish to set
	 */
	public void setFirstName(final String firstName) {
		this.firstName = firstName;
	}

    /**
     * Return the value associated with the column: id.
	 * @return A Integer object (this.id)
	 */
    @Id 
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Basic( optional = false )
	@Column( name = "connections_id", nullable = false  )
	public Integer getId() {
		return this.id;
		
	}
	

  
    /**  
     * Set the value related to the column: id.
	 * @param id the id value you wish to set
	 */
	public void setId(final Integer id) {
		// If we've just been persisted and hashCode has been
		// returned then make sure other entities with this
		// ID return the already returned hash code
		if ( (this.id == null || this.id == 0) &&
				(id != null) &&
				(this.hashCode != null) ) {
		SAVED_HASHES.put( id, this.hashCode );
		}
		this.id = id;
	}

    /**
     * Return the value associated with the column: inventoryHasConnections.
	 * @return A Set&lt;InventoryHasConnections&gt; object (this.inventoryHasConnections)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "id.connectionsConnections"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "connections_id", nullable = false  )
	public Set<InventoryHasConnections> getInventoryHasConnectionss() {
		return this.inventoryHasConnectionss;
		
	}
	
	/**
	 * Adds a bi-directional link of type InventoryHasConnections to the inventoryHasConnectionss set.
	 * @param inventoryHasConnections item to add
	 */
	public void addInventoryHasConnections(InventoryHasConnections inventoryHasConnections) {
		inventoryHasConnections.getId().setConnectionsConnections(this);
		this.inventoryHasConnectionss.add(inventoryHasConnections);
	}

  
    /**  
     * Set the value related to the column: inventoryHasConnections.
	 * @param inventoryHasConnections the inventoryHasConnections value you wish to set
	 */
	public void setInventoryHasConnectionss(final Set<InventoryHasConnections> inventoryHasConnections) {
		this.inventoryHasConnectionss = inventoryHasConnections;
	}

    /**
     * Return the value associated with the column: invoices.
	 * @return A Set&lt;Invoices&gt; object (this.invoices)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "connectionsConnections"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "connections_id", nullable = false  )
	public Set<Invoices> getInvoiceses() {
		return this.invoiceses;
		
	}
	
	/**
	 * Adds a bi-directional link of type Invoices to the invoiceses set.
	 * @param invoices item to add
	 */
	public void addInvoices(Invoices invoices) {
		invoices.setConnectionsConnections(this);
		this.invoiceses.add(invoices);
	}

  
    /**  
     * Set the value related to the column: invoices.
	 * @param invoices the invoices value you wish to set
	 */
	public void setInvoiceses(final Set<Invoices> invoices) {
		this.invoiceses = invoices;
	}

    /**
     * Return the value associated with the column: lastName.
	 * @return A String object (this.lastName)
	 */
	@Basic( optional = true )
	@Column( name = "last_name", length = 30  )
	public String getLastName() {
		return this.lastName;
		
	}
	

  
    /**  
     * Set the value related to the column: lastName.
	 * @param lastName the lastName value you wish to set
	 */
	public void setLastName(final String lastName) {
		this.lastName = lastName;
	}

    /**
     * Return the value associated with the column: latitude.
	 * @return A java.math.BigDecimal object (this.latitude)
	 */
	public java.math.BigDecimal getLatitude() {
		return this.latitude;
		
	}
	

  
    /**  
     * Set the value related to the column: latitude.
	 * @param latitude the latitude value you wish to set
	 */
	public void setLatitude(final java.math.BigDecimal latitude) {
		this.latitude = latitude;
	}

    /**
     * Return the value associated with the column: longitude.
	 * @return A java.math.BigDecimal object (this.longitude)
	 */
	public java.math.BigDecimal getLongitude() {
		return this.longitude;
		
	}
	

  
    /**  
     * Set the value related to the column: longitude.
	 * @param longitude the longitude value you wish to set
	 */
	public void setLongitude(final java.math.BigDecimal longitude) {
		this.longitude = longitude;
	}

    /**
     * Return the value associated with the column: mobile1.
	 * @return A String object (this.mobile1)
	 */
	@Basic( optional = true )
	@Column( name = "mobile_1", length = 20  )
	public String getMobile1() {
		return this.mobile1;
		
	}
	

  
    /**  
     * Set the value related to the column: mobile1.
	 * @param mobile1 the mobile1 value you wish to set
	 */
	public void setMobile1(final String mobile1) {
		this.mobile1 = mobile1;
	}

    /**
     * Return the value associated with the column: mobile2.
	 * @return A String object (this.mobile2)
	 */
	@Basic( optional = true )
	@Column( name = "mobile_2", length = 20  )
	public String getMobile2() {
		return this.mobile2;
		
	}
	

  
    /**  
     * Set the value related to the column: mobile2.
	 * @param mobile2 the mobile2 value you wish to set
	 */
	public void setMobile2(final String mobile2) {
		this.mobile2 = mobile2;
	}

    /**
     * Return the value associated with the column: note.
	 * @return A String object (this.note)
	 */
	@Basic( optional = true )
	@Column( length = 32000  )
	public String getNote() {
		return this.note;
		
	}
	

  
    /**  
     * Set the value related to the column: note.
	 * @param note the note value you wish to set
	 */
	public void setNote(final String note) {
		this.note = note;
	}

    /**
     * Return the value associated with the column: picture.
	 * @return A Byte[] object (this.picture)
	 */
	public Byte[] getPicture() {
		return this.picture;
		
	}
	

  
    /**  
     * Set the value related to the column: picture.
	 * @param picture the picture value you wish to set
	 */
	public void setPicture(final Byte[] picture) {
		this.picture = picture;
	}

    /**
     * Return the value associated with the column: postCode.
	 * @return A String object (this.postCode)
	 */
	@Basic( optional = true )
	@Column( name = "post_code", length = 10  )
	public String getPostCode() {
		return this.postCode;
		
	}
	

  
    /**  
     * Set the value related to the column: postCode.
	 * @param postCode the postCode value you wish to set
	 */
	public void setPostCode(final String postCode) {
		this.postCode = postCode;
	}

    /**
     * Return the value associated with the column: projectsHasConnections.
	 * @return A Set&lt;ProjectsHasConnections&gt; object (this.projectsHasConnections)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "id.connectionsConnections"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "connections_id", nullable = false  )
	public Set<ProjectsHasConnections> getProjectsHasConnectionss() {
		return this.projectsHasConnectionss;
		
	}
	
	/**
	 * Adds a bi-directional link of type ProjectsHasConnections to the projectsHasConnectionss set.
	 * @param projectsHasConnections item to add
	 */
	public void addProjectsHasConnections(ProjectsHasConnections projectsHasConnections) {
		projectsHasConnections.getId().setConnectionsConnections(this);
		this.projectsHasConnectionss.add(projectsHasConnections);
	}

  
    /**  
     * Set the value related to the column: projectsHasConnections.
	 * @param projectsHasConnections the projectsHasConnections value you wish to set
	 */
	public void setProjectsHasConnectionss(final Set<ProjectsHasConnections> projectsHasConnections) {
		this.projectsHasConnectionss = projectsHasConnections;
	}

    /**
     * Return the value associated with the column: quotes.
	 * @return A Set&lt;Quotes&gt; object (this.quotes)
	 */
 	@OneToMany( fetch = FetchType.LAZY, cascade = { CascadeType.PERSIST, CascadeType.MERGE }, mappedBy = "connectionsConnections"  )
 	@org.hibernate.annotations.Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE})
	@Basic( optional = false )
	@Column( name = "connections_id", nullable = false  )
	public Set<Quotes> getQuoteses() {
		return this.quoteses;
		
	}
	
	/**
	 * Adds a bi-directional link of type Quotes to the quoteses set.
	 * @param quotes item to add
	 */
	public void addQuotes(Quotes quotes) {
		quotes.setConnectionsConnections(this);
		this.quoteses.add(quotes);
	}

  
    /**  
     * Set the value related to the column: quotes.
	 * @param quotes the quotes value you wish to set
	 */
	public void setQuoteses(final Set<Quotes> quotes) {
		this.quoteses = quotes;
	}

    /**
     * Return the value associated with the column: state.
	 * @return A String object (this.state)
	 */
	@Basic( optional = true )
	@Column( length = 20  )
	public String getState() {
		return this.state;
		
	}
	

  
    /**  
     * Set the value related to the column: state.
	 * @param state the state value you wish to set
	 */
	public void setState(final String state) {
		this.state = state;
	}

    /**
     * Return the value associated with the column: supplier.
	 * @return A Boolean object (this.supplier)
	 */
	public Boolean isSupplier() {
		return this.supplier;
		
	}
	

  
    /**  
     * Set the value related to the column: supplier.
	 * @param supplier the supplier value you wish to set
	 */
	public void setSupplier(final Boolean supplier) {
		this.supplier = supplier;
	}

    /**
     * Return the value associated with the column: tax1.
	 * @return A Boolean object (this.tax1)
	 */
	@Basic( optional = true )
	@Column( name = "tax_1"  )
	public Boolean isTax1() {
		return this.tax1;
		
	}
	

  
    /**  
     * Set the value related to the column: tax1.
	 * @param tax1 the tax1 value you wish to set
	 */
	public void setTax1(final Boolean tax1) {
		this.tax1 = tax1;
	}

    /**
     * Return the value associated with the column: tax2.
	 * @return A Boolean object (this.tax2)
	 */
	@Basic( optional = true )
	@Column( name = "tax_2"  )
	public Boolean isTax2() {
		return this.tax2;
		
	}
	

  
    /**  
     * Set the value related to the column: tax2.
	 * @param tax2 the tax2 value you wish to set
	 */
	public void setTax2(final Boolean tax2) {
		this.tax2 = tax2;
	}

    /**
     * Return the value associated with the column: website.
	 * @return A String object (this.website)
	 */
	@Basic( optional = true )
	@Column( length = 100  )
	public String getWebsite() {
		return this.website;
		
	}
	

  
    /**  
     * Set the value related to the column: website.
	 * @param website the website value you wish to set
	 */
	public void setWebsite(final String website) {
		this.website = website;
	}


   /**
    * Deep copy.
	* @return cloned object
	* @throws CloneNotSupportedException on error
    */
    @Override
    public Connections clone() throws CloneNotSupportedException {
		
        final Connections copy = (Connections)super.clone();

		copy.setAddress(this.getAddress());
		copy.setAddress2(this.getAddress2());
		copy.setCity(this.getCity());
		copy.setCompanyName(this.getCompanyName());
		if (this.getConnectionsDocumentss() != null) {
			copy.getConnectionsDocumentss().addAll(this.getConnectionsDocumentss());
		}
		if (this.getConnectionsShippings() != null) {
			copy.getConnectionsShippings().addAll(this.getConnectionsShippings());
		}
		copy.setContact(this.getContact());
		copy.setCountryCode(this.getCountryCode());
		copy.setCustomer(this.isCustomer());
		copy.setCustom1(this.getCustom1());
		copy.setCustom2(this.getCustom2());
		copy.setEmail(this.getEmail());
		copy.setFax(this.getFax());
		copy.setFirstName(this.getFirstName());
		copy.setId(this.getId());
		if (this.getInventoryHasConnectionss() != null) {
			copy.getInventoryHasConnectionss().addAll(this.getInventoryHasConnectionss());
		}
		if (this.getInvoiceses() != null) {
			copy.getInvoiceses().addAll(this.getInvoiceses());
		}
		copy.setLastName(this.getLastName());
		copy.setLatitude(this.getLatitude());
		copy.setLongitude(this.getLongitude());
		copy.setMobile1(this.getMobile1());
		copy.setMobile2(this.getMobile2());
		copy.setNote(this.getNote());
		copy.setPicture(this.getPicture());
		copy.setPostCode(this.getPostCode());
		if (this.getProjectsHasConnectionss() != null) {
			copy.getProjectsHasConnectionss().addAll(this.getProjectsHasConnectionss());
		}
		if (this.getQuoteses() != null) {
			copy.getQuoteses().addAll(this.getQuoteses());
		}
		copy.setState(this.getState());
		copy.setSupplier(this.isSupplier());
		copy.setTax1(this.isTax1());
		copy.setTax2(this.isTax2());
		copy.setWebsite(this.getWebsite());
		return copy;
	}
	


	/** Provides toString implementation.
	 * @see java.lang.Object#toString()
	 * @return String representation of this class.
	 */
	@Override
	public String toString() {
		StringBuffer sb = new StringBuffer();
		
		sb.append("address: " + this.getAddress() + ", ");
		sb.append("address2: " + this.getAddress2() + ", ");
		sb.append("city: " + this.getCity() + ", ");
		sb.append("companyName: " + this.getCompanyName() + ", ");
		sb.append("contact: " + this.getContact() + ", ");
		sb.append("countryCode: " + this.getCountryCode() + ", ");
		sb.append("customer: " + this.isCustomer() + ", ");
		sb.append("custom1: " + this.getCustom1() + ", ");
		sb.append("custom2: " + this.getCustom2() + ", ");
		sb.append("email: " + this.getEmail() + ", ");
		sb.append("fax: " + this.getFax() + ", ");
		sb.append("firstName: " + this.getFirstName() + ", ");
		sb.append("id: " + this.getId() + ", ");
		sb.append("lastName: " + this.getLastName() + ", ");
		sb.append("latitude: " + this.getLatitude() + ", ");
		sb.append("longitude: " + this.getLongitude() + ", ");
		sb.append("mobile1: " + this.getMobile1() + ", ");
		sb.append("mobile2: " + this.getMobile2() + ", ");
		sb.append("note: " + this.getNote() + ", ");
		sb.append("picture: " + (this.picture == null ? null : Arrays.toString(this.getPicture())) + ", ");
		sb.append("postCode: " + this.getPostCode() + ", ");
		sb.append("state: " + this.getState() + ", ");
		sb.append("supplier: " + this.isSupplier() + ", ");
		sb.append("tax1: " + this.isTax1() + ", ");
		sb.append("tax2: " + this.isTax2() + ", ");
		sb.append("website: " + this.getWebsite());
		return sb.toString();		
	}


	/** Equals implementation. 
	 * @see java.lang.Object#equals(java.lang.Object)
	 * @param aThat Object to compare with
	 * @return true/false
	 */
	@Override
	public boolean equals(final Object aThat) {
		Object proxyThat = aThat;
		
		if ( this == aThat ) {
			 return true;
		}

		
		if (aThat instanceof HibernateProxy) {
 			// narrow down the proxy to the class we are dealing with.
 			try {
				proxyThat = ((HibernateProxy) aThat).getHibernateLazyInitializer().getImplementation(); 
			} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		   	}
		}
		if (aThat == null)  {
			 return false;
		}
		
		final Connections that; 
		try {
			that = (Connections) proxyThat;
			if ( !(that.getClassType().equals(this.getClassType()))){
				return false;
			}
		} catch (org.hibernate.ObjectNotFoundException e) {
				return false;
		} catch (ClassCastException e) {
				return false;
		}
		
		
		boolean result = true;
		result = result && (((this.getId() == null) && ( that.getId() == null)) || (this.getId() != null  && this.getId().equals(that.getId())));
		result = result && (((getAddress() == null) && (that.getAddress() == null)) || (getAddress() != null && getAddress().equals(that.getAddress())));
		result = result && (((getAddress2() == null) && (that.getAddress2() == null)) || (getAddress2() != null && getAddress2().equals(that.getAddress2())));
		result = result && (((getCity() == null) && (that.getCity() == null)) || (getCity() != null && getCity().equals(that.getCity())));
		result = result && (((getCompanyName() == null) && (that.getCompanyName() == null)) || (getCompanyName() != null && getCompanyName().equals(that.getCompanyName())));
		result = result && (((getContact() == null) && (that.getContact() == null)) || (getContact() != null && getContact().equals(that.getContact())));
		result = result && (((getCountryCode() == null) && (that.getCountryCode() == null)) || (getCountryCode() != null && getCountryCode().equals(that.getCountryCode())));
		result = result && (((isCustomer() == null) && (that.isCustomer() == null)) || (isCustomer() != null && isCustomer().equals(that.isCustomer())));
		result = result && (((getCustom1() == null) && (that.getCustom1() == null)) || (getCustom1() != null && getCustom1().equals(that.getCustom1())));
		result = result && (((getCustom2() == null) && (that.getCustom2() == null)) || (getCustom2() != null && getCustom2().equals(that.getCustom2())));
		result = result && (((getEmail() == null) && (that.getEmail() == null)) || (getEmail() != null && getEmail().equals(that.getEmail())));
		result = result && (((getFax() == null) && (that.getFax() == null)) || (getFax() != null && getFax().equals(that.getFax())));
		result = result && (((getFirstName() == null) && (that.getFirstName() == null)) || (getFirstName() != null && getFirstName().equals(that.getFirstName())));
		result = result && (((getLastName() == null) && (that.getLastName() == null)) || (getLastName() != null && getLastName().equals(that.getLastName())));
		result = result && (((getLatitude() == null) && (that.getLatitude() == null)) || (getLatitude() != null && getLatitude().equals(that.getLatitude())));
		result = result && (((getLongitude() == null) && (that.getLongitude() == null)) || (getLongitude() != null && getLongitude().equals(that.getLongitude())));
		result = result && (((getMobile1() == null) && (that.getMobile1() == null)) || (getMobile1() != null && getMobile1().equals(that.getMobile1())));
		result = result && (((getMobile2() == null) && (that.getMobile2() == null)) || (getMobile2() != null && getMobile2().equals(that.getMobile2())));
		result = result && (((getNote() == null) && (that.getNote() == null)) || (getNote() != null && getNote().equals(that.getNote())));
		result = result && (((getPicture() == null) && (that.getPicture() == null)) || (getPicture() != null && getPicture().equals(that.getPicture())));
		result = result && (((getPostCode() == null) && (that.getPostCode() == null)) || (getPostCode() != null && getPostCode().equals(that.getPostCode())));
		result = result && (((getState() == null) && (that.getState() == null)) || (getState() != null && getState().equals(that.getState())));
		result = result && (((isSupplier() == null) && (that.isSupplier() == null)) || (isSupplier() != null && isSupplier().equals(that.isSupplier())));
		result = result && (((isTax1() == null) && (that.isTax1() == null)) || (isTax1() != null && isTax1().equals(that.isTax1())));
		result = result && (((isTax2() == null) && (that.isTax2() == null)) || (isTax2() != null && isTax2().equals(that.isTax2())));
		result = result && (((getWebsite() == null) && (that.getWebsite() == null)) || (getWebsite() != null && getWebsite().equals(that.getWebsite())));
		return result;
	}
	
	/** Calculate the hashcode.
	 * @see java.lang.Object#hashCode()
	 * @return a calculated number
	 */
	@Override
	public int hashCode() {
		if ( this.hashCode == null ) {
			synchronized ( this ) {
				if ( this.hashCode == null ) {
					Integer newHashCode = null;

					if ( getId() != null ) {
					newHashCode = SAVED_HASHES.get( getId() );
					}
					
					if ( newHashCode == null ) {
						if ( getId() != null && getId() != 0) {
							newHashCode = getId();
						} else {

						}
					}
					
					this.hashCode = newHashCode;
				}
			}
		}
	return this.hashCode;
	}
	

	
}
